{
    "swagger": "2.0",
    "info": {
        "description": "TRH Backend API",
        "title": "TRH Backend",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:${PORT}",
    "basePath": "/api/v1",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get current user profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get all users (Admin only)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/configuration/api-key": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all API key configurations (excluding soft deleted ones)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-key"
                ],
                "summary": "Get all API Keys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.ApiKeyListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new API key configuration with key and type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-key"
                ],
                "summary": "Create API Key",
                "parameters": [
                    {
                        "description": "Create API Key request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateApiKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.ApiKeyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/configuration/api-key/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get API key configuration by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-key"
                ],
                "summary": "Get API Key by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.ApiKeyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Soft delete API key configuration by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-key"
                ],
                "summary": "Delete API Key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update existing API key configuration by ID (partial update)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-key"
                ],
                "summary": "Update API Key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update API Key request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateApiKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.ApiKeyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/configuration/aws-credentials": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all AWS credentials (excluding soft deleted ones)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aws-credentials"
                ],
                "summary": "Get all AWS credentials",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.AWSCredentialsListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new AWS credentials with name, access key ID, and secret access key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aws-credentials"
                ],
                "summary": "Create AWS credentials",
                "parameters": [
                    {
                        "description": "Create AWS credentials request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateAWSCredentialsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.AWSCredentialsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/configuration/aws-credentials/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get AWS credentials by their unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aws-credentials"
                ],
                "summary": "Get AWS credentials by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AWS credentials ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.AWSCredentialsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Soft delete AWS credentials by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aws-credentials"
                ],
                "summary": "Delete AWS credentials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AWS credentials ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update existing AWS credentials by ID (partial update)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aws-credentials"
                ],
                "summary": "Update AWS credentials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AWS credentials ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update AWS credentials request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateAWSCredentialsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.AWSCredentialsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/configuration/rpc-url": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all RPC URL configurations (excluding soft deleted ones)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rpc-url"
                ],
                "summary": "Get all RPC URLs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.RPCUrlListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new RPC URL configuration with name, URL, type, and network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rpc-url"
                ],
                "summary": "Create RPC URL",
                "parameters": [
                    {
                        "description": "Create RPC URL request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateRPCUrlRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.RPCUrlResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/configuration/rpc-url/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get RPC URL configuration by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rpc-url"
                ],
                "summary": "Get RPC URL by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "RPC URL ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.RPCUrlResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Soft delete RPC URL configuration by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rpc-url"
                ],
                "summary": "Delete RPC URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "RPC URL ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update existing RPC URL configuration by ID (partial update)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rpc-url"
                ],
                "summary": "Update RPC URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "RPC URL ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update RPC URL request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateRPCUrlRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.RPCUrlResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get health",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Get health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get All Stacks (Authenticated users)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Get All Stacks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deploy Thanos Stack (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Deploy Thanos Stack",
                "parameters": [
                    {
                        "description": "Deploy Thanos Stack Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.DeployThanosRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}": {
            "get": {
                "description": "Get Stack By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Get Stack By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Update Network",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Network Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateNetworkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Terminate Thanos Stack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Terminate Thanos Stack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/deployments": {
            "get": {
                "description": "Get Deployments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Get Deployments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/deployments/{deploymentId}": {
            "get": {
                "description": "Get Stack Deployment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Get Stack Deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/deployments/{deploymentId}/logs": {
            "get": {
                "description": "Get logs for a deployment (paginated)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Get Deployment Logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 200,
                        "description": "Max logs to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return logs after this log id (exclusive)",
                        "name": "afterId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/deployments/{deploymentId}/logs/download": {
            "get": {
                "description": "Download the deployment log file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Download Deployment Log File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Log file content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/deployments/{deploymentId}/status": {
            "get": {
                "description": "Get Stack Deployment Status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Get Stack Deployment Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/integrations": {
            "get": {
                "description": "Get Integrations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Get Integrations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/integrations/block-explorer": {
            "post": {
                "description": "Install Block Explorer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Install Block Explorer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Install Block Explorer Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.InstallBlockExplorerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Uninstall Block Explorer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Uninstall Block Explorer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/integrations/bridge": {
            "post": {
                "description": "Install Bridge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Install Bridge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Uninstall Bridge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Uninstall Bridge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/integrations/monitoring": {
            "post": {
                "description": "Install Monitoring",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Install Monitoring",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Install Monitoring Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.InstallMonitoringRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Uninstall Monitoring",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Uninstall Monitoring",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/integrations/{integrationId}": {
            "get": {
                "description": "Get Integration By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Get Integration By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Integration ID",
                        "name": "integrationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/logs": {
            "get": {
                "description": "Get logs across all deployments for a stack (paginated)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Get Stack Logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 200,
                        "description": "Max logs to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return logs after this log id (exclusive)",
                        "name": "afterId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/register-candidates": {
            "post": {
                "description": "Register Candidates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Register Candidates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/register-metadata-dao": {
            "post": {
                "description": "Register Metadata DAO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Register Metadata DAO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/resume": {
            "post": {
                "description": "Resume Thanos Stack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Resume Thanos Stack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/rollupconfig": {
            "get": {
                "description": "Download the rollup config file for a stack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Download Rollup Config File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rollup config file content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/status": {
            "get": {
                "description": "Get Stack Status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Get Stack Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        },
        "/stacks/thanos/{id}/stop": {
            "post": {
                "description": "Stop Thanos Stack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thanos Stack"
                ],
                "summary": "Stop Thanos Stack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thanos Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.AWSCredentialsListResponse": {
            "type": "object",
            "properties": {
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.AWSCredentialsResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dtos.AWSCredentialsResponse": {
            "type": "object",
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dtos.AlertManagerConfig": {
            "type": "object",
            "properties": {
                "email": {
                    "$ref": "#/definitions/dtos.EmailConfig"
                },
                "telegram": {
                    "$ref": "#/definitions/dtos.TelegramConfig"
                }
            }
        },
        "dtos.ApiKeyListResponse": {
            "type": "object",
            "properties": {
                "apiKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ApiKeyResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dtos.ApiKeyResponse": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dtos.AuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dtos.UserResponse"
                }
            }
        },
        "dtos.CreateAWSCredentialsRequest": {
            "type": "object",
            "required": [
                "accessKeyId",
                "name",
                "secretAccessKey"
            ],
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateApiKeyRequest": {
            "type": "object",
            "required": [
                "apiKey",
                "type"
            ],
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateRPCUrlRequest": {
            "type": "object",
            "required": [
                "name",
                "network",
                "rpcUrl",
                "type"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "network": {
                    "$ref": "#/definitions/entities.NetworkType"
                },
                "rpcUrl": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/entities.RPCType"
                }
            }
        },
        "dtos.DeployThanosRequest": {
            "type": "object",
            "required": [
                "adminAccount",
                "awsAccessKey",
                "awsRegion",
                "awsSecretAccessKey",
                "batchSubmissionFrequency",
                "batcherAccount",
                "chainName",
                "challengePeriod",
                "l1BeaconUrl",
                "l1RpcUrl",
                "l2BlockTime",
                "network",
                "outputRootFrequency",
                "proposerAccount",
                "sequencerAccount"
            ],
            "properties": {
                "adminAccount": {
                    "type": "string"
                },
                "awsAccessKey": {
                    "type": "string"
                },
                "awsRegion": {
                    "type": "string"
                },
                "awsSecretAccessKey": {
                    "type": "string"
                },
                "batchSubmissionFrequency": {
                    "description": "seconds",
                    "type": "integer",
                    "minimum": 1
                },
                "batcherAccount": {
                    "type": "string"
                },
                "chainName": {
                    "type": "string"
                },
                "challengePeriod": {
                    "description": "seconds",
                    "type": "integer",
                    "minimum": 1
                },
                "deploymentPath": {
                    "type": "string"
                },
                "l1BeaconUrl": {
                    "type": "string"
                },
                "l1RpcUrl": {
                    "type": "string"
                },
                "l2BlockTime": {
                    "description": "seconds",
                    "type": "integer",
                    "minimum": 1
                },
                "network": {
                    "enum": [
                        "Mainnet",
                        "Testnet",
                        "LocalDevnet"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/entities.DeploymentNetwork"
                        }
                    ]
                },
                "outputRootFrequency": {
                    "description": "seconds",
                    "type": "integer",
                    "minimum": 1
                },
                "proposerAccount": {
                    "type": "string"
                },
                "registerCandidate": {
                    "type": "boolean"
                },
                "registerCandidateParams": {
                    "$ref": "#/definitions/dtos.RegisterCandidateRequest"
                },
                "sequencerAccount": {
                    "type": "string"
                }
            }
        },
        "dtos.EmailConfig": {
            "type": "object",
            "properties": {
                "criticalReceivers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "defaultReceivers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "smtpAuthPassword": {
                    "type": "string"
                },
                "smtpAuthUsername": {
                    "type": "string"
                },
                "smtpFrom": {
                    "type": "string"
                },
                "smtpSmarthost": {
                    "type": "string"
                }
            }
        },
        "dtos.InstallBlockExplorerRequest": {
            "type": "object",
            "required": [
                "coinmarketcapKey",
                "databasePassword",
                "databaseUsername",
                "walletConnectId"
            ],
            "properties": {
                "coinmarketcapKey": {
                    "type": "string"
                },
                "databasePassword": {
                    "type": "string"
                },
                "databaseUsername": {
                    "type": "string"
                },
                "walletConnectId": {
                    "type": "string"
                }
            }
        },
        "dtos.InstallMonitoringRequest": {
            "type": "object",
            "required": [
                "grafanaPassword"
            ],
            "properties": {
                "alertManager": {
                    "$ref": "#/definitions/dtos.AlertManagerConfig"
                },
                "grafanaPassword": {
                    "type": "string"
                },
                "loggingEnabled": {
                    "type": "boolean"
                }
            }
        },
        "dtos.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dtos.RPCUrlListResponse": {
            "type": "object",
            "properties": {
                "rpcUrls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.RPCUrlResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dtos.RPCUrlResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "network": {
                    "$ref": "#/definitions/entities.NetworkType"
                },
                "rpcUrl": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/entities.RPCType"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dtos.RegisterCandidateRequest": {
            "type": "object",
            "required": [
                "amount",
                "memo"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "minimum": 0
                },
                "memo": {
                    "type": "string"
                },
                "nameInfo": {
                    "type": "string"
                }
            }
        },
        "dtos.TelegramConfig": {
            "type": "object",
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "criticalReceivers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TelegramReceiver"
                    }
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "dtos.TelegramReceiver": {
            "type": "object",
            "properties": {
                "chatId": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateAWSCredentialsRequest": {
            "type": "object",
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateApiKeyRequest": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateNetworkRequest": {
            "type": "object",
            "properties": {
                "l1BeaconUrl": {
                    "type": "string"
                },
                "l1RpcUrl": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateRPCUrlRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "network": {
                    "$ref": "#/definitions/entities.NetworkType"
                },
                "rpcUrl": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/entities.RPCType"
                }
            }
        },
        "dtos.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/entities.UserRole"
                }
            }
        },
        "entities.DeploymentNetwork": {
            "type": "string",
            "enum": [
                "Mainnet",
                "Testnet",
                "LocalDevnet"
            ],
            "x-enum-varnames": [
                "DeploymentNetworkMainnet",
                "DeploymentNetworkTestnet",
                "DeploymentNetworkLocalDevnet"
            ]
        },
        "entities.NetworkType": {
            "type": "string",
            "enum": [
                "Testnet",
                "Mainnet"
            ],
            "x-enum-varnames": [
                "NetworkTypeTestnet",
                "NetworkTypeMainnet"
            ]
        },
        "entities.RPCType": {
            "type": "string",
            "enum": [
                "BeaconChain",
                "ExecutionLayer"
            ],
            "x-enum-varnames": [
                "RPCTypeBeaconChain",
                "RPCTypeExecutionLayer"
            ]
        },
        "entities.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "entities.UserRole": {
            "type": "string",
            "enum": [
                "Admin",
                "User"
            ],
            "x-enum-varnames": [
                "UserRoleAdmin",
                "UserRoleUser"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}